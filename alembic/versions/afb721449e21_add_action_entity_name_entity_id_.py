"""add action, entity_name, entity_id, changes fields to AuditLog

Revision ID: afb721449e21
Revises: combined_audit_and_users_tables
Create Date: 2025-08-26 09:12:11.738143

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = 'afb721449e21'
down_revision: Union[str, None] = 'combined_audit_and_users_tables'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('audit_logs', sa.Column('action', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True))
    op.add_column('audit_logs', sa.Column('entity_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True))
    op.add_column('audit_logs', sa.Column('entity_id', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True))
    op.add_column('audit_logs', sa.Column('changes', sa.JSON(), nullable=True))
    op.create_index(op.f('ix_audit_logs_action'), 'audit_logs', ['action'], unique=False)
    op.create_index(op.f('ix_audit_logs_entity_id'), 'audit_logs', ['entity_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_entity_name'), 'audit_logs', ['entity_name'], unique=False)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_index(op.f('idx_users_active'), table_name='users')
    op.drop_index(op.f('idx_users_role'), table_name='users')
    op.drop_index(op.f('idx_users_session_token'), table_name='users')
    op.drop_index(op.f('ix_users_ad_object_guid'), table_name='users')
    op.create_unique_constraint(None, 'users', ['ad_object_guid'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.create_index(op.f('ix_users_ad_object_guid'), 'users', ['ad_object_guid'], unique=True)
    op.create_index(op.f('idx_users_session_token'), 'users', ['current_session_token'], unique=False)
    op.create_index(op.f('idx_users_role'), 'users', ['role'], unique=False)
    op.create_index(op.f('idx_users_active'), 'users', ['is_active'], unique=False)
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_index(op.f('ix_audit_logs_entity_name'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_entity_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_action'), table_name='audit_logs')
    op.drop_column('audit_logs', 'changes')
    op.drop_column('audit_logs', 'entity_id')
    op.drop_column('audit_logs', 'entity_name')
    op.drop_column('audit_logs', 'action')
    # ### end Alembic commands ###
